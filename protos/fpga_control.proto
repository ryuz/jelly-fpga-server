syntax = "proto3";
package fpga_control;

service FpgaControl {
    rpc Reset ( ResetRequest ) returns (BoolResponse);

    rpc Load ( LoadRequest ) returns (LoadResponse);
    rpc Unload ( UnloadRequest ) returns (BoolResponse);

    rpc UploadFirmware ( stream UploadFirmwareRequest ) returns (BoolResponse);
    rpc LoadBitstream ( LoadBitstreamRequest ) returns (BoolResponse);
    rpc LoadDtbo ( LoadDtboRequest ) returns (BoolResponse);

    rpc DtsToDtb ( DtsToDtbRequest ) returns (DtsToDtbResponse);

    rpc OpenMmap (OpenMmapRequest) returns (OpenResponse);
    rpc OpenUio (OpenUioRequest) returns (OpenResponse);
    rpc Close (CloseRequest) returns (BoolResponse);

    rpc WriteMemU    (WriteMemURequest)  returns (BoolResponse);
    rpc WriteMemI    (WriteMemIRequest)  returns (BoolResponse);
    rpc ReadMemU     (ReadMemRequest)    returns (ReadUResponse);
    rpc ReadMemI     (ReadMemRequest)    returns (ReadIResponse);
    rpc WriteRegU    (WriteRegURequest)  returns (BoolResponse);
    rpc WriteRegI    (WriteRegIRequest)  returns (BoolResponse);
    rpc ReadRegU     (ReadRegRequest)    returns (ReadUResponse);
    rpc ReadRegI     (ReadRegRequest)    returns (ReadIResponse);
}

message Empty {
}

message BoolResponse {
    bool result = 1;
}

message ResetRequest {
}

message LoadRequest {
    string name = 1;
}

message LoadResponse {
    bool result = 1;
    int32 slot = 2;
}

message UnloadRequest {
    int32 slot = 1;
}

message UploadFirmwareRequest {
    string name = 1;
    bytes data = 2;
}

message LoadBitstreamRequest {
    string name = 1;
}

message LoadDtboRequest {
    string name = 1;
}


message DtsToDtbRequest {
    string dts = 1;
}

message DtsToDtbResponse {
    bool result = 1;
    bytes dtb = 2;
}


///////////////

message OpenMmapRequest {
    string path = 1;
    uint64 offset = 2;
    uint64 size = 3;
    uint64 unit = 4;
}

message OpenUioRequest {
    string name = 1;
    uint64 unit = 2;
}

message OpenResponse {
    bool  result = 1;
    uint32 id = 2;
}

message CloseRequest {
    uint32 id = 1;
}


message WriteMemURequest {
    uint32 id = 1;
    uint64 offset = 2;
    uint64 data = 3;
    uint64 size = 4;
}

message WriteMemIRequest {
    uint32 id = 1;
    uint64 offset = 2;
    int64  data = 3;
    uint64 size = 4;
}

message ReadMemRequest {
    uint32 id = 1;
    uint64 offset = 2;
    uint64 size = 3;
}

message WriteRegURequest {
    uint32 id = 1;
    uint64 reg = 2;
    uint64 data = 3;
    uint64 size = 4;
}

message WriteRegIRequest {
    uint32 id = 1;
    uint64 reg = 2;
    int64  data = 3;
    uint64 size = 4;
}

message ReadRegRequest {
    uint32 id = 1;
    uint64 reg = 2;
    uint64 size = 3;
}

message ReadUResponse {
    bool  result = 1;
    uint64 data = 2;
}

message ReadIResponse {
    bool  result = 1;
    int64 data = 2;
}

